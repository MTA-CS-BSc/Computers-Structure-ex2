/**
 * Let A be a binary numbers (8 bits) 
 * Zn = number of zeros in A.
 */

CHIP Ex2Q5 {
    IN A[8];
    OUT Zn[4], ones[8];

    PARTS:
    Not(in=0, out=ones[0]);
    Not(in=0, out=ones[1]);
    Not(in=0, out=ones[2]);
    Not(in=0, out=ones[3]);
    Not(in=0, out=ones[4]);
    Not(in=0, out=ones[5]);
    Not(in=0, out=ones[6]);
    Not(in=0, out=ones[7]);
    
    Xor(a=A, b=ones, out=A_xor_255);
    FullAdder(a=A_xor_255[0], b=A_xor_255[1], c=A_xor_255[2], sum=Zn[0], carry=c0);
    FullAdder(a=A_xor_255[3], b=A_xor_255[4], c=c0, sum=Zn[1], carry=c1);
    FullAdder(a=A_xor_255[5], b=A_xor_255[6], c=c1, sum=Zn[2], carry=c2);
    HalfAdder(a=A_xor_255, b=c2, sum=Z[3], carry=c3);
}